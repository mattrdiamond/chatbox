{"version":3,"sources":["static-data.js","reducers/user.js","constants/action-types.js","reducers/activeUserId.js","reducers/inputValue.js","reducers/sidebarOpen.js","reducers/emojiOpen.js","reducers/index.js","reducers/messages.js","reducers/contacts.js","reducers/filterUsers.js","store/index.js","actions/index.js","containers/User.js","components/Icon.js","containers/SidebarInput.js","components/Sidebar.js","components/Empty.js","components/Header.js","components/MoreButton.js","containers/Chat.js","components/Chats.js","emojiData.js","components/EmojiPicker.js","containers/EmojiIcon.js","containers/MessageInput.js","containers/ChatWindow.js","components/Main.js","components/Navbar.js","containers/App.js","index.js","images/icons.svg"],"names":["numberOfUsers","shortid","require","txtgen","faker","_","users","Array","from","length","generateUser","contacts","mapKeys","getMessages","messagesPerUser","messages","forEach","user","numberOfMsgs","user_id","Object","objectSpread","v","i","number","text","sentence","is_user_msg","random","boolean","showMore","editMode","name","findName","email","internet","profile_pic","avatar","status","generate","state","arguments","undefined","SET_ACTIVE_USER_ID","SET_INPUT_VALUE","SET_CURSOR_POSITION","SET_EMOJI","SEND_MESSAGE","SET_FILTER_VALUE","TOGGLE_SIDEBAR","TOGGLE_EMOJI_PICKER","ACTIVATE_SEND_BUTTON","DELETE_MESSAGE","TOGGLE_MORE","TOGGLE_EDIT_MODE","SAVE_EDITS","activeUserId","action","type","payload","initialStateInput","typingValue","cursorPosition","sendButtonActive","sidebarOpen","emojiOpen","combineReducers","_action$payload","message","userId","allUserMsgs","msgNumber","keys","pop","defineProperty","_action$payload2","remainingMsgs","omit","_action$payload3","_action$payload4","_action$payload5","editedContent","inputValue","emojiString","newCursorPosition","filterUsers","store","createStore","reducer","applyMiddleware","createLogger","toggleSidebar","value","connect","dispatch","handleUserClick","_ref","isSidebarOpen","react_default","a","createElement","className","onClick","bind","onKeyPress","e","key","tabIndex","src","alt","Icon","props","concat","icon","role","height","width","aria-label","title","xlinkHref","Icons","SidebarInput","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResize","assertThisInitialized","handleClick","window","addEventListener","removeEventListener","_this$props","innerWidth","preventDefault","_this$props2","handleSubmit","_this$props3","handleFilterUsers","onSubmit","onChange","placeholder","components_Icon","Component","target","Sidebar","visibleUsers","filter","contact","toLowerCase","replace","trim","includes","src_containers_SidebarInput","map","src_containers_User","Empty","firstName","split","Header","activeUser","MoreButton","toggleMoreBtn","handleDeleteMsg","handleEditMode","handleToggle","userMessages","lastMessage","checkIfLastMsg","id","onBlur","aria-labelledby","aria-hidden","onMouseDown","console","log","Chat","focusContentEditable","setTimeout","editChatRef","current","focus","React","createRef","handleSaveEdits","prevProps","saveEdits","textContent","toggleMore","toggleEditMode","containsEmoji","RegExp","test","checkEmoji","_this$props4","isUserMsg","userPhoto","altText","ref","contentEditable","suppressContentEditableWarning","src_components_MoreButton","Chats","chatsRef","scrollToBottom","prevState","scrollTop","scrollHeight","_this2","src_containers_Chat","emojiData","emojis","EmojiPicker","emojiConvertor","EmojiConvertor","init_env","elem","domNode","style","opacity","requestAnimationFrame","transition","handleEmojiClick","category","emoji","blur","EmojiIcon","inputField","setSelectionRange","toggleEmojiPicker","src_components_EmojiPicker","_handlePickerBlur","_openPicker","MessageInput","handleChange","handleCursorChange","handleBlur","isSendButtonActive","activateSendButton","document","activeElement","sendMessage","setInputValue","cursor","selectionStart","setEmoji","substring","setCursorPosition","clickedPosition","_this$props5","autoComplete","onKeyUp","src_containers_EmojiIcon","typing","deleteMessage","activeMsgs","src_components_Header","src_components_Chats","values","src_containers_MessageInput","Main","mobileSidebar","src_containers_ChatWindow","src_components_Empty","Navbar","src_components_Navbar","src_components_Sidebar","src_components_Main","ReactDOM","render","es","src_containers_App","getElementById","module","exports","__webpack_require__","p"],"mappings":"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AFL/D,mFAMjBE,KAAKkF,4DAGYC,GACbA,EAAUhM,SAASN,OAASmH,KAAKb,MAAMhG,SAASN,QAClDmH,KAAKkF,0DAKPlF,KAAKiF,SAASvB,QAAQ0B,UAAYpF,KAAKiF,SAASvB,QAAQ2B,8CAGjD,IAAAC,EAAAtF,KACP,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQmG,IAAK5E,KAAKiF,UAC9BjF,KAAKb,MAAMhG,SAAS6I,IAAI,SAAAxF,GAAO,OAC9B8B,EAAAC,EAAAC,cAAC+G,GAAD,CACE/I,QAASA,EACT8F,WAAYgD,EAAKnG,MAAMmD,WACvBjJ,KAAMiM,EAAKnG,MAAM9F,KACjByF,IAAKtC,EAAQ5C,OACb6I,gBAAiB6C,EAAKnG,MAAMsD,4BA7BpBpB,mDCLLmE,YAAA,CACb,CACEpL,KAAM,SACNqL,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CACErL,KAAM,SACNqL,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,iBAGJ,CACErL,KAAM,UACNqL,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CACErL,KAAM,SACNqL,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,iBAGJ,CACErL,KAAM,UACNqL,OAAQ,CACN,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eAC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","file":"static/js/main.e30fa8d7.chunk.js","sourcesContent":["const shortid = require(\"shortid\");\nconst txtgen = require(\"txtgen\");\nconst faker = require(\"faker\");\nconst _ = require(\"lodash\");\n\nconst users = generateUsers(10); // array of objects\nexport const contacts = _.mapKeys(users, \"user_id\");\nexport const getMessages = messagesPerUser => {\n  let messages = {};\n  _.forEach(users, user => {\n    messages[user.user_id] = {\n      ..._.mapKeys(generateMsgs(messagesPerUser), \"number\")\n    };\n  });\n  return messages;\n};\n\n// example of how the state object is structured\nexport const state = {\n  user: generateUser(),\n  messages: getMessages(10),\n  typing: \"\",\n  contacts,\n  activeUserId: null,\n  filterUsers: \"\"\n};\n\n/**\n * @returns {Object} - a new user object\n */\n\nexport function generateMsg(number) {\n  return {\n    number,\n    text: txtgen.sentence(),\n    is_user_msg: faker.random.boolean(),\n    showMore: false,\n    editMode: false\n  };\n}\n\n/**\n * @returns {Object} - a new user object\n */\n\nexport function generateUser() {\n  return {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    profile_pic: faker.internet.avatar(),\n    status: txtgen.sentence(),\n    user_id: shortid.generate()\n  };\n}\n\n/**\n * @param {Number} numberOfUsers\n * @param {Function} generateUser\n * @returns {Array} - an array of user objects with length n\n */\n\nfunction generateUsers(numberOfUsers) {\n  return Array.from({ length: numberOfUsers }, () => generateUser());\n}\n\nfunction generateMsgs(numberOfMsgs) {\n  return Array.from({ length: numberOfMsgs }, (v, i) => generateMsg(i));\n}\n","import { generateUser } from \"../static-data\";\n\nfunction user(state = generateUser(), action) {\n  return state;\n}\n\nexport default user;\n","export const SET_ACTIVE_USER_ID = \"SET_ACTIVE_USER_ID\";\nexport const SET_INPUT_VALUE = \"SET_INPUT_VALUE\";\nexport const SET_CURSOR_POSITION = \"SET_CURSOR_POSITION\";\nexport const SET_EMOJI = \"SET_EMOJI\";\nexport const SEND_MESSAGE = \"SEND_MESSAGE\";\nexport const SET_FILTER_VALUE = \"SET_FILTER_VALUE\";\nexport const TOGGLE_SIDEBAR = \"TOGGLE_SIDEBAR\";\nexport const TOGGLE_EMOJI_PICKER = \"TOGGLE_EMOJI_PICKER\";\nexport const ACTIVATE_SEND_BUTTON = \"ACTIVATE_SEND_BUTTON\";\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const TOGGLE_MORE = \"TOGGLE_MORE\";\nexport const TOGGLE_EDIT_MODE = \"TOGGLE_EDIT_MODE\";\nexport const SAVE_EDITS = \"SAVE_EDITS\";\n","import { SET_ACTIVE_USER_ID } from \"../constants/action-types\";\n\nfunction activeUserId(state = null, action) {\n  switch (action.type) {\n    case SET_ACTIVE_USER_ID:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default activeUserId;\n","import {\n  SET_INPUT_VALUE,\n  SET_CURSOR_POSITION,\n  SET_EMOJI,\n  SEND_MESSAGE,\n  ACTIVATE_SEND_BUTTON\n} from \"../constants/action-types\";\n\nconst initialStateInput = {\n  typingValue: \"\",\n  cursorPosition: 0,\n  sendButtonActive: false\n};\n\nexport default function inputValue(state = initialStateInput, action) {\n  switch (action.type) {\n    case SET_INPUT_VALUE:\n      const { typingValue, cursorPosition } = action.payload;\n      return {\n        ...state,\n        typingValue: typingValue,\n        cursorPosition: cursorPosition\n      };\n    case SET_CURSOR_POSITION:\n      return {\n        ...state,\n        cursorPosition: action.payload\n      };\n    case SET_EMOJI:\n      const { emojiString, newCursorPosition } = action.payload;\n      return {\n        ...state,\n        typingValue: emojiString,\n        cursorPosition: newCursorPosition\n      };\n    case SEND_MESSAGE:\n      return {\n        typingValue: \"\",\n        cursorPosition: 0,\n        sendButtonActive: false\n      };\n    case ACTIVATE_SEND_BUTTON:\n      return {\n        ...state,\n        sendButtonActive: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { TOGGLE_SIDEBAR } from \"../constants/action-types\";\n\nfunction sidebarOpen(state = false, action) {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR:\n      return action.payload || !state;\n    default:\n      return state;\n  }\n}\n\nexport default sidebarOpen;\n","import { TOGGLE_EMOJI_PICKER } from \"../constants/action-types\";\n\nfunction emojiOpen(state = false, action) {\n  switch (action.type) {\n    case TOGGLE_EMOJI_PICKER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default emojiOpen;\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport contacts from \"./contacts\";\nimport activeUserId from \"./activeUserId\";\nimport messages from \"./messages\";\nimport inputValue from \"./inputValue\";\nimport filterUsers from \"./filterUsers\";\nimport sidebarOpen from \"./sidebarOpen\";\nimport emojiOpen from \"./emojiOpen\";\n\nexport default combineReducers({\n  user,\n  messages,\n  contacts,\n  activeUserId,\n  inputValue,\n  filterUsers,\n  sidebarOpen,\n  emojiOpen\n});\n","import { getMessages } from \"../static-data\";\nimport {\n  SEND_MESSAGE,\n  DELETE_MESSAGE,\n  TOGGLE_MORE,\n  TOGGLE_EDIT_MODE,\n  SAVE_EDITS\n} from \"../constants/action-types\";\nimport _ from \"lodash\";\n\nexport default function messages(state = getMessages(10), action) {\n  switch (action.type) {\n    case SEND_MESSAGE: {\n      const { message, userId } = action.payload;\n      const allUserMsgs = state[userId];\n      // 1. convert object to array of keys, 2. retrieve last item, 3. add 1 to make it last key\n      const msgNumber = +_.keys(allUserMsgs).pop() + 1;\n      return {\n        ...state,\n        [userId]: {\n          ...allUserMsgs,\n          [msgNumber]: {\n            number: msgNumber,\n            text: message,\n            is_user_msg: true,\n            showMore: false,\n            editMode: false\n          }\n        }\n      };\n    }\n    case DELETE_MESSAGE: {\n      const { message, userId } = action.payload;\n      const allUserMsgs = state[userId];\n      const remainingMsgs = _.omit(allUserMsgs, message.number);\n      return {\n        ...state,\n        [userId]: remainingMsgs\n      };\n    }\n    case TOGGLE_MORE: {\n      const { userId, message } = action.payload;\n      const { number, showMore } = message;\n      const allUserMsgs = state[userId];\n      return {\n        ...state,\n        [userId]: {\n          ...allUserMsgs,\n          [number]: {\n            ...message,\n            showMore: !showMore\n          }\n        }\n      };\n    }\n    case TOGGLE_EDIT_MODE: {\n      const { userId, message } = action.payload;\n      const { number, editMode } = message;\n      const allUserMsgs = state[userId];\n      return {\n        ...state,\n        [userId]: {\n          ...allUserMsgs,\n          [number]: {\n            ...message,\n            editMode: !editMode\n          }\n        }\n      };\n    }\n    case SAVE_EDITS: {\n      const { userId, message, editedContent } = action.payload;\n      const { number } = message;\n      const allUserMsgs = state[userId];\n      return {\n        ...state,\n        [userId]: {\n          ...allUserMsgs,\n          [number]: {\n            ...message,\n            text: editedContent,\n            editMode: false\n          }\n        }\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { contacts } from \"../static-data\";\n\nexport default (state = contacts, action) => {\n  return state;\n};\n","import { SET_FILTER_VALUE } from \"../constants/action-types\";\n\nexport default function filterUsers(state = \"\", action) {\n  switch (action.type) {\n    case SET_FILTER_VALUE:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport reducer from \"../reducers\";\n\nconst store = createStore(reducer, applyMiddleware(createLogger()));\n\nexport default store;\n","import {\n  SET_ACTIVE_USER_ID,\n  SET_INPUT_VALUE,\n  SET_CURSOR_POSITION,\n  SET_EMOJI,\n  SEND_MESSAGE,\n  SET_FILTER_VALUE,\n  TOGGLE_SIDEBAR,\n  TOGGLE_EMOJI_PICKER,\n  ACTIVATE_SEND_BUTTON,\n  DELETE_MESSAGE,\n  TOGGLE_MORE,\n  TOGGLE_EDIT_MODE,\n  SAVE_EDITS\n} from \"../constants/action-types\";\n\nexport const setActiveUserId = id => ({\n  type: SET_ACTIVE_USER_ID,\n  payload: id\n});\n\nexport const setInputValue = (typingValue, cursorPosition) => ({\n  type: SET_INPUT_VALUE,\n  payload: {\n    typingValue,\n    cursorPosition\n  }\n});\n\nexport const setCursorPosition = cursorPosition => ({\n  type: SET_CURSOR_POSITION,\n  payload: cursorPosition\n});\n\nexport const setEmoji = (emojiString, newCursorPosition) => ({\n  type: SET_EMOJI,\n  payload: {\n    emojiString,\n    newCursorPosition\n  }\n});\n\nexport const sendMessage = (message, userId) => ({\n  type: SEND_MESSAGE,\n  payload: {\n    message,\n    userId\n  }\n});\n\nexport const setFilterValue = value => ({\n  type: SET_FILTER_VALUE,\n  payload: value\n});\n\nexport const toggleSidebar = value => ({\n  type: TOGGLE_SIDEBAR,\n  payload: value\n});\n\nexport const toggleEmojiPicker = value => ({\n  type: TOGGLE_EMOJI_PICKER,\n  payload: value\n});\n\nexport const activateSendButton = value => ({\n  type: ACTIVATE_SEND_BUTTON,\n  payload: value\n});\n\nexport const deleteMessage = (message, userId) => ({\n  type: DELETE_MESSAGE,\n  payload: {\n    message,\n    userId\n  }\n});\n\nexport const toggleMore = (userId, message) => ({\n  type: TOGGLE_MORE,\n  payload: {\n    userId,\n    message\n  }\n});\n\nexport const toggleEditMode = (userId, message) => ({\n  type: TOGGLE_EDIT_MODE,\n  payload: {\n    userId,\n    message\n  }\n});\n\nexport const saveEdits = (userId, message, editedContent) => ({\n  type: SAVE_EDITS,\n  payload: {\n    userId,\n    message,\n    editedContent\n  }\n});\n","import React from \"react\";\nimport { setActiveUserId } from \"../actions\";\nimport \"./User.css\";\nimport { connect } from \"react-redux\";\n\nconst User = ({ user, handleUserClick, activeUserId, sidebarOpen }) => {\n  const { name, profile_pic, status, user_id } = user;\n  const isSidebarOpen = sidebarOpen ? \" visible\" : \" hidden\";\n\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleUserClick(user_id);\n    }\n  };\n\n  return (\n    <div\n      className={\n        \"User\" + (user_id === activeUserId ? \" active\" : \"\") + isSidebarOpen\n      }\n      onClick={handleUserClick.bind(null, user_id)}\n      onKeyPress={handleKeyPress}\n      tabIndex=\"0\"\n    >\n      <img src={profile_pic} alt={name} className=\"User__pic\" />\n      <div className=\"User__details\">\n        <p className=\"User__details-name\">{name}</p>\n        <p className=\"User__details-status\">{status}</p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { activeUserId, sidebarOpen } = state;\n  return {\n    activeUserId: activeUserId,\n    sidebarOpen: sidebarOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleUserClick: user_id => {\n      dispatch(setActiveUserId(user_id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(User);\n","import React from \"react\";\nimport Icons from \"../images/icons.svg\";\n\nconst Icon = props => (\n  <svg\n    className={`icon icon-${props.icon}`}\n    role=\"img\"\n    height={props.height}\n    width={props.width}\n    aria-label={props.icon + \" icon\"}\n  >\n    <title>{props.title || props.icon}</title>\n    <use xlinkHref={`${Icons}#${props.icon}`} />\n  </svg>\n);\n\nexport default Icon;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SidebarInput.css\";\nimport Icon from \"../components/Icon\";\nimport { setFilterValue, toggleSidebar } from \"../actions\";\n\nclass SidebarInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleResize = this.handleResize.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    const { sidebarOpen, toggleSidebar } = this.props;\n    const largeScreen = window.innerWidth >= 750 ? true : false;\n    if (largeScreen && sidebarOpen) {\n      toggleSidebar(false);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  handleClick() {\n    const { toggleSidebar, sidebarOpen } = this.props;\n    toggleSidebar(!sidebarOpen);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      handleClick,\n      props: { handleFilterUsers, filterUsers, sidebarOpen }\n    } = this;\n\n    return (\n      <form className=\"input-container\" onSubmit={handleSubmit}>\n        <input\n          className={\"Sidebar__input\" + (!sidebarOpen ? \" hidden\" : \"\")}\n          onChange={handleFilterUsers}\n          placeholder=\"Search contacts...\"\n          value={filterUsers}\n        />\n        <button\n          className={\"Sidebar__button\" + (sidebarOpen ? \" open\" : \" closed\")}\n          onClick={handleClick}\n        >\n          <Icon icon=\"arrows\" title={sidebarOpen ? \"close\" : \"open\"} />\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { filterUsers, handleFilterUsers, sidebarOpen } = state;\n  return { filterUsers, handleFilterUsers, sidebarOpen };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleFilterUsers: e => {\n      dispatch(setFilterValue(e.target.value));\n    },\n    toggleSidebar: value => {\n      dispatch(toggleSidebar(value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SidebarInput);\n","import React from \"react\";\nimport User from \"../containers/User\";\nimport \"./Sidebar.css\";\nimport SidebarInput from \"../containers/SidebarInput\";\n\nconst Sidebar = ({ contacts, filterUsers, sidebarOpen }) => {\n  const visibleUsers = contacts.filter(contact =>\n    contact.name\n      .toLowerCase()\n      .replace(/[^\\w ]/gi, \"\")\n      .trim()\n      .includes(\n        filterUsers\n          .toLowerCase()\n          .replace(/[^\\w ]/gi, \"\")\n          .trim()\n      )\n  );\n\n  return (\n    <aside className={\"Sidebar\" + (sidebarOpen ? \" open\" : \" closed\")}>\n      <SidebarInput />\n      {visibleUsers.map(contact => (\n        <User user={contact} key={contact.user_id} />\n      ))}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Empty.css\";\n\nconst Empty = ({ user }) => {\n  const { name, profile_pic, status } = user;\n  const removePrefix = name.replace(/\\b(dr|mr|mrs|ms|miss)[.\\s]\\s?/gi, \"\");\n  const firstName = removePrefix.split(\" \")[0];\n\n  return (\n    <div className=\"Empty\">\n      <div className=\"Empty__content\">\n        <img src={profile_pic} alt={name} className=\"Empty__img\" />\n        <h1 className=\"Empty__name\">Welcome, {firstName}.</h1>\n        <p className=\"Empty__info\">\n          Search for someone to start chatting with or go to Contacts to see who\n          is available.\n        </p>\n      </div>\n      <div className=\"Empty__status-container\">\n        <p className=\"Empty__status\">\n          <b>Status: </b>\n          {status}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Empty;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = ({ activeUser }) => {\n  const { name, status, profile_pic } = activeUser;\n  return (\n    <header className=\"Header\">\n      <img src={profile_pic} alt={name} className=\"Header__pic\" />\n      <div className=\"Header__info\">\n        <h1 className=\"Header__name\">{name}</h1>\n        <p className=\"Header__status\">{status}</p>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./MoreButton.css\";\nimport Icon from \"./Icon\";\n\nconst MoreButton = ({\n  toggleMoreBtn,\n  showMore,\n  message,\n  messages,\n  handleDeleteMsg,\n  handleEditMode,\n  activeUserId\n}) => {\n  const handleToggle = e => {\n    toggleMoreBtn(e);\n  };\n\n  const handleDelete = message => {\n    handleDeleteMsg(message);\n    console.log(\"delete message\", message);\n  };\n\n  const handleEdit = () => {\n    handleEditMode();\n  };\n\n  const checkIfLastMsg = () => {\n    const userMessages = messages[activeUserId];\n    const lastMessage = Object.keys(userMessages).length;\n    if (message.number + 1 === lastMessage) {\n      return \" last\";\n    }\n    return \"\";\n  };\n\n  return (\n    <div\n      className={\n        \"more\" + (showMore ? \" show-more-menu\" : \"\") + checkIfLastMsg()\n      }\n    >\n      <button\n        id=\"more-btn\"\n        className=\"more-btn\"\n        onClick={handleToggle}\n        onBlur={handleToggle}\n      >\n        <span className=\"more-dot\" />\n        <span className=\"more-dot\" />\n        <span className=\"more-dot\" />\n      </button>\n      <div className=\"more-menu\">\n        <div className=\"triangle-with-shadow\">\n        </div>\n        <ul\n          className=\"more-menu-items\"\n          tabIndex=\"-1\"\n          role=\"menu\"\n          aria-labelledby=\"more-btn\"\n          aria-hidden={showMore ? \"false\" : \"true\"}\n        >\n          <li className=\"more-menu-item\" role=\"presentation\">\n            <button\n              type=\"button\"\n              className=\"more-menu-btn\"\n              role=\"menuitem\"\n              onMouseDown={handleEdit}\n            >\n              <Icon icon=\"edit\" />\n              Edit\n            </button>\n          </li>\n          <li className=\"more-menu-item\" role=\"presentation\">\n            <button\n              type=\"button\"\n              className=\"more-menu-btn\"\n              role=\"menuitem\"\n              onMouseDown={handleDelete.bind(this, message)}\n            >\n            <Icon icon=\"delete\"/>\n              Delete\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MoreButton;\n","import React, { Component } from \"react\";\nimport \"./Chat.css\";\nimport MoreButton from \"../components/MoreButton\";\nimport Icon from \"../components/Icon\";\nimport { connect } from \"react-redux\";\nimport { toggleMore, toggleEditMode, saveEdits } from \"../actions\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.editChatRef = React.createRef();\n    this.handleEditMode = this.handleEditMode.bind(this);\n    this.focusContentEditable = this.focusContentEditable.bind(this);\n    this.handleSaveEdits = this.handleSaveEdits.bind(this);\n    this.toggleMoreBtn = this.toggleMoreBtn.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.message.editMode === false &&\n      this.props.message.editMode === true\n    ) {\n      this.focusContentEditable();\n    }\n  }\n\n  focusContentEditable = () => {\n    setTimeout(() => {\n      this.editChatRef.current.focus();\n    }, 0);\n  };\n\n  handleSaveEdits() {\n    const { activeUserId, saveEdits, message } = this.props;\n    const editedContent = this.editChatRef.current.textContent;\n    saveEdits(activeUserId, message, editedContent);\n  }\n\n  toggleMoreBtn() {\n    const { activeUserId, toggleMore, message } = this.props;\n    toggleMore(activeUserId, message);\n  }\n\n  handleEditMode() {\n    const { activeUserId, toggleEditMode, message } = this.props;\n    toggleEditMode(activeUserId, message);\n  }\n\n  checkEmoji(text) {\n    const containsEmoji = RegExp(\n      /^(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])*$/g\n    );\n    if (text.length <= 7 && containsEmoji.test(text)) {\n      return \" big-emoji\";\n    }\n    return \"\";\n  }\n\n  render() {\n    const {\n      toggleMoreBtn,\n      handleEditMode,\n      handleSaveEdits,\n      checkEmoji,\n      props: {\n        message,\n        messages,\n        activeUser,\n        user,\n        handleDeleteMsg,\n        activeUserId\n      }\n    } = this;\n    const { text, is_user_msg, editMode } = message;\n    const isUserMsg = is_user_msg ? \" from-me\" : \" from-user\";\n    const userPhoto = is_user_msg ? user.profile_pic : activeUser.profile_pic;\n    const altText = is_user_msg ? user.name : activeUser.name;\n\n    return (\n      <div className={\"Chat-container\" + isUserMsg}>\n        <img src={userPhoto} alt={altText} className={\"Chat-img\" + isUserMsg} />\n        {editMode ? (\n          <div\n            className=\"editable-wrapper Chat from-me\"\n            onBlur={handleSaveEdits}\n          >\n            <div\n              className=\"Chat-editable\"\n              ref={this.editChatRef}\n              contentEditable=\"true\"\n              suppressContentEditableWarning={true}\n            >\n              {text}\n            </div>\n            <div className=\"Chat-buttons\">\n              <button className=\"Chat-button\" onMouseDown={handleEditMode}>\n                <Icon icon=\"cancel\" />\n              </button>\n              <button className=\"Chat-button\" onMouseDown={handleSaveEdits}>\n                <Icon icon=\"save\" />\n              </button>\n            </div>\n          </div>\n        ) : (\n          <span className={\"Chat\" + isUserMsg + checkEmoji(text)}>{text}</span>\n        )}\n        {is_user_msg && (\n          <MoreButton\n            toggleMoreBtn={toggleMoreBtn}\n            showMore={message.showMore}\n            messages={messages}\n            message={message}\n            activeUserId={activeUserId}\n            handleDeleteMsg={handleDeleteMsg}\n            handleEditMode={handleEditMode}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { messages, activeUserId } = state;\n  return {\n    messages,\n    activeUserId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleMore: (userId, message) => {\n      dispatch(toggleMore(userId, message));\n    },\n    toggleEditMode: (userId, message) => {\n      dispatch(toggleEditMode(userId, message));\n    },\n    saveEdits: (userId, message, editedContent) => {\n      dispatch(saveEdits(userId, message, editedContent));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Chat);\n","import React, { Component } from \"react\";\nimport \"./Chats.css\";\nimport Chat from \"../containers/Chat\";\n// import { state } from \"../static-data\";\n\nclass Chats extends Component {\n  constructor(props) {\n    super(props);\n    this.chatsRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.messages.length < this.props.messages.length) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    this.chatsRef.current.scrollTop = this.chatsRef.current.scrollHeight;\n  }\n\n  render() {\n    return (\n      <div className=\"Chats\" ref={this.chatsRef}>\n        {this.props.messages.map(message => (\n          <Chat\n            message={message}\n            activeUser={this.props.activeUser}\n            user={this.props.user}\n            key={message.number}\n            handleDeleteMsg={this.props.handleDeleteMsg}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Chats;\n","export default [\n  {\n    name: \"People\",\n    emojis: [\n      \"😄\",\n      \"😃\",\n      \"😀\",\n      \"😊\",\n      \"😉\",\n      \"😍\",\n      \"😘\",\n      \"😚\",\n      \"😗\",\n      \"😙\",\n      \"😜\",\n      \"😝\",\n      \"😛\",\n      \"😳\",\n      \"😁\",\n      \"😔\",\n      \"😌\",\n      \"😒\",\n      \"😞\",\n      \"😣\",\n      \"😢\",\n      \"😂\",\n      \"😭\",\n      \"😪\",\n      \"😥\",\n      \"😰\",\n      \"😅\",\n      \"😓\",\n      \"😩\",\n      \"😫\",\n      \"😨\",\n      \"😱\",\n      \"😠\",\n      \"😡\",\n      \"😤\",\n      \"😖\",\n      \"😆\",\n      \"😋\",\n      \"😷\",\n      \"😎\",\n      \"😴\",\n      \"😵\",\n      \"😲\",\n      \"😟\",\n      \"😦\",\n      \"😧\",\n      \"👿\",\n      \"😮\",\n      \"😬\",\n      \"😐\",\n      \"😕\",\n      \"😯\",\n      \"😏\",\n      \"😑\",\n      \"👲\",\n      \"👳\",\n      \"👮\",\n      \"👷\",\n      \"💂\",\n      \"👶\",\n      \"👦\",\n      \"👧\",\n      \"👨\",\n      \"👩\",\n      \"👴\",\n      \"👵\",\n      \"👱\",\n      \"👼\",\n      \"👸\",\n      \"😺\",\n      \"😸\",\n      \"😻\",\n      \"😽\",\n      \"😼\",\n      \"🙀\",\n      \"😿\",\n      \"😹\",\n      \"😾\",\n      \"👹\",\n      \"👺\",\n      \"🙈\",\n      \"🙉\",\n      \"🙊\",\n      \"💀\",\n      \"👽\",\n      \"💩\",\n      \"🔥\",\n      \"✨\",\n      \"🌟\",\n      \"💫\",\n      \"💥\",\n      \"💢\",\n      \"💦\",\n      \"💧\",\n      \"💤\",\n      \"💨\",\n      \"👂\",\n      \"👀\",\n      \"👃\",\n      \"👅\",\n      \"👄\",\n      \"👍\",\n      \"👎\",\n      \"👌\",\n      \"👊\",\n      \"✊\",\n      \"👋\",\n      \"✋\",\n      \"👐\",\n      \"👆\",\n      \"👇\",\n      \"👉\",\n      \"👈\",\n      \"🙌\",\n      \"🙏\",\n      \"👏\",\n      \"💪\",\n      \"🚶\",\n      \"🏃\",\n      \"💃\",\n      \"👫\",\n      \"👪\",\n      \"💏\",\n      \"💑\",\n      \"👯\",\n      \"🙆\",\n      \"🙅\",\n      \"💁\",\n      \"🙋\",\n      \"💆\",\n      \"💇\",\n      \"💅\",\n      \"👰\",\n      \"🙎\",\n      \"🙍\",\n      \"🙇\",\n      \"🎩\",\n      \"👑\",\n      \"👒\",\n      \"👟\",\n      \"👞\",\n      \"👡\",\n      \"👠\",\n      \"👢\",\n      \"👕\",\n      \"👔\",\n      \"👚\",\n      \"👗\",\n      \"🎽\",\n      \"👖\",\n      \"👘\",\n      \"👙\",\n      \"💼\",\n      \"👜\",\n      \"👝\",\n      \"👛\",\n      \"👓\",\n      \"🎀\",\n      \"🌂\",\n      \"💄\",\n      \"💛\",\n      \"💙\",\n      \"💜\",\n      \"💚\",\n      \"💔\",\n      \"💗\",\n      \"💓\",\n      \"💕\",\n      \"💖\",\n      \"💞\",\n      \"💘\",\n      \"💌\",\n      \"💋\",\n      \"💍\",\n      \"💎\",\n      \"👤\",\n      \"💬\",\n      \"👣\"\n    ]\n  },\n  {\n    name: \"Nature\",\n    emojis: [\n      \"🐶\",\n      \"🐺\",\n      \"🐱\",\n      \"🐭\",\n      \"🐹\",\n      \"🐰\",\n      \"🐸\",\n      \"🐯\",\n      \"🐨\",\n      \"🐻\",\n      \"🐷\",\n      \"🐽\",\n      \"🐮\",\n      \"🐗\",\n      \"🐵\",\n      \"🐒\",\n      \"🐴\",\n      \"🐑\",\n      \"🐘\",\n      \"🐼\",\n      \"🐧\",\n      \"🐦\",\n      \"🐤\",\n      \"🐥\",\n      \"🐣\",\n      \"🐔\",\n      \"🐍\",\n      \"🐢\",\n      \"🐛\",\n      \"🐝\",\n      \"🐜\",\n      \"🐞\",\n      \"🐌\",\n      \"🐙\",\n      \"🐚\",\n      \"🐠\",\n      \"🐟\",\n      \"🐬\",\n      \"🐳\",\n      \"🐎\",\n      \"🐲\",\n      \"🐡\",\n      \"🐫\",\n      \"🐩\",\n      \"🐾\",\n      \"💐\",\n      \"🌸\",\n      \"🌷\",\n      \"🍀\",\n      \"🌹\",\n      \"🌻\",\n      \"🌺\",\n      \"🍁\",\n      \"🍃\",\n      \"🍂\",\n      \"🌿\",\n      \"🌾\",\n      \"🍄\",\n      \"🌵\",\n      \"🌴\",\n      \"🌰\",\n      \"🌱\",\n      \"🌼\",\n      \"🌑\",\n      \"🌓\",\n      \"🌔\",\n      \"🌕\",\n      \"🌛\",\n      \"🌙\",\n      \"🌏\",\n      \"🌋\",\n      \"🌌\",\n      \"🌠\",\n      \"⛅\",\n      \"⛄\",\n      \"🌀\",\n      \"🌁\",\n      \"🌈\",\n      \"🌊\"\n    ]\n  },\n  {\n    name: \"Objects\",\n    emojis: [\n      \"🎍\",\n      \"💝\",\n      \"🎎\",\n      \"🎒\",\n      \"🎓\",\n      \"🎏\",\n      \"🎆\",\n      \"🎇\",\n      \"🎐\",\n      \"🎑\",\n      \"🎃\",\n      \"👻\",\n      \"🎅\",\n      \"🎄\",\n      \"🎁\",\n      \"🎋\",\n      \"🎉\",\n      \"🎊\",\n      \"🎈\",\n      \"🎌\",\n      \"🔮\",\n      \"🎥\",\n      \"📷\",\n      \"📹\",\n      \"📼\",\n      \"💿\",\n      \"📀\",\n      \"💽\",\n      \"💾\",\n      \"💻\",\n      \"📱\",\n      \"📞\",\n      \"📟\",\n      \"📠\",\n      \"📡\",\n      \"📺\",\n      \"📻\",\n      \"🔊\",\n      \"🔔\",\n      \"📢\",\n      \"📣\",\n      \"⏳\",\n      \"⌛\",\n      \"⏰\",\n      \"⌚\",\n      \"🔓\",\n      \"🔒\",\n      \"🔏\",\n      \"🔐\",\n      \"🔑\",\n      \"🔎\",\n      \"💡\",\n      \"🔦\",\n      \"🔌\",\n      \"🔋\",\n      \"🔍\",\n      \"🛀\",\n      \"🚽\",\n      \"🔧\",\n      \"🔩\",\n      \"🔨\",\n      \"🚪\",\n      \"🚬\",\n      \"💣\",\n      \"🔫\",\n      \"🔪\",\n      \"💊\",\n      \"💉\",\n      \"💰\",\n      \"💴\",\n      \"💵\",\n      \"💳\",\n      \"💸\",\n      \"📲\",\n      \"📧\",\n      \"📥\",\n      \"📤\",\n      \"📩\",\n      \"📨\",\n      \"📫\",\n      \"📪\",\n      \"📮\",\n      \"📦\",\n      \"📝\",\n      \"📄\",\n      \"📃\",\n      \"📑\",\n      \"📊\",\n      \"📈\",\n      \"📉\",\n      \"📜\",\n      \"📋\",\n      \"📅\",\n      \"📆\",\n      \"📇\",\n      \"📁\",\n      \"📂\",\n      \"📌\",\n      \"📎\",\n      \"📏\",\n      \"📐\",\n      \"📕\",\n      \"📗\",\n      \"📘\",\n      \"📙\",\n      \"📓\",\n      \"📔\",\n      \"📒\",\n      \"📚\",\n      \"📖\",\n      \"🔖\",\n      \"📛\",\n      \"📰\",\n      \"🎨\",\n      \"🎬\",\n      \"🎤\",\n      \"🎧\",\n      \"🎼\",\n      \"🎵\",\n      \"🎶\",\n      \"🎹\",\n      \"🎻\",\n      \"🎺\",\n      \"🎷\",\n      \"🎸\",\n      \"👾\",\n      \"🎮\",\n      \"🃏\",\n      \"🎴\",\n      \"🀄\",\n      \"🎲\",\n      \"🎯\",\n      \"🏈\",\n      \"🏀\",\n      \"⚽\",\n      \"⚾\",\n      \"🎾\",\n      \"🎱\",\n      \"🎳\",\n      \"⛳\",\n      \"🏁\",\n      \"🏆\",\n      \"🎿\",\n      \"🏂\",\n      \"🏊\",\n      \"🏄\",\n      \"🎣\",\n      \"🍵\",\n      \"🍶\",\n      \"🍺\",\n      \"🍻\",\n      \"🍸\",\n      \"🍹\",\n      \"🍷\",\n      \"🍴\",\n      \"🍕\",\n      \"🍔\",\n      \"🍟\",\n      \"🍗\",\n      \"🍖\",\n      \"🍝\",\n      \"🍛\",\n      \"🍤\",\n      \"🍱\",\n      \"🍣\",\n      \"🍥\",\n      \"🍙\",\n      \"🍘\",\n      \"🍚\",\n      \"🍜\",\n      \"🍲\",\n      \"🍢\",\n      \"🍡\",\n      \"🍳\",\n      \"🍞\",\n      \"🍩\",\n      \"🍮\",\n      \"🍦\",\n      \"🍨\",\n      \"🍧\",\n      \"🎂\",\n      \"🍰\",\n      \"🍪\",\n      \"🍫\",\n      \"🍬\",\n      \"🍭\",\n      \"🍯\",\n      \"🍎\",\n      \"🍏\",\n      \"🍊\",\n      \"🍒\",\n      \"🍇\",\n      \"🍉\",\n      \"🍓\",\n      \"🍑\",\n      \"🍈\",\n      \"🍌\",\n      \"🍍\",\n      \"🍠\",\n      \"🍆\",\n      \"🍅\",\n      \"🌽\"\n    ]\n  },\n  {\n    name: \"Places\",\n    emojis: [\n      \"🏠\",\n      \"🏡\",\n      \"🏫\",\n      \"🏢\",\n      \"🏣\",\n      \"🏥\",\n      \"🏦\",\n      \"🏪\",\n      \"🏩\",\n      \"🏨\",\n      \"💒\",\n      \"⛪\",\n      \"🏬\",\n      \"🌇\",\n      \"🌆\",\n      \"🏯\",\n      \"🏰\",\n      \"⛺\",\n      \"🏭\",\n      \"🗼\",\n      \"🗾\",\n      \"🗻\",\n      \"🌄\",\n      \"🌅\",\n      \"🌃\",\n      \"🗽\",\n      \"🌉\",\n      \"🎠\",\n      \"🎡\",\n      \"⛲\",\n      \"🎢\",\n      \"🚢\",\n      \"⛵\",\n      \"🚤\",\n      \"🚀\",\n      \"💺\",\n      \"🚉\",\n      \"🚄\",\n      \"🚅\",\n      \"🚇\",\n      \"🚃\",\n      \"🚌\",\n      \"🚙\",\n      \"🚗\",\n      \"🚕\",\n      \"🚚\",\n      \"🚨\",\n      \"🚓\",\n      \"🚒\",\n      \"🚑\",\n      \"🚲\",\n      \"💈\",\n      \"🚏\",\n      \"🎫\",\n      \"🚥\",\n      \"🚧\",\n      \"🔰\",\n      \"⛽\",\n      \"🏮\",\n      \"🎰\",\n      \"🗿\",\n      \"🎪\",\n      \"🎭\",\n      \"📍\",\n      \"🚩\"\n    ]\n  },\n  {\n    name: \"Symbols\",\n    emojis: [\n      \"🔟\",\n      \"🔢\",\n      \"🔣\",\n      \"🔠\",\n      \"🔡\",\n      \"🔤\",\n      \"🔼\",\n      \"🔽\",\n      \"⏪\",\n      \"⏩\",\n      \"⏫\",\n      \"⏬\",\n      \"🆗\",\n      \"🆕\",\n      \"🆙\",\n      \"🆒\",\n      \"🆓\",\n      \"🆖\",\n      \"📶\",\n      \"🎦\",\n      \"🈁\",\n      \"🈯\",\n      \"🈳\",\n      \"🈵\",\n      \"🈴\",\n      \"🈲\",\n      \"🉐\",\n      \"🈹\",\n      \"🈺\",\n      \"🈶\",\n      \"🈚\",\n      \"🚻\",\n      \"🚹\",\n      \"🚺\",\n      \"🚼\",\n      \"🚾\",\n      \"🚭\",\n      \"🈸\",\n      \"🉑\",\n      \"🆑\",\n      \"🆘\",\n      \"🆔\",\n      \"🚫\",\n      \"🔞\",\n      \"⛔\",\n      \"❎\",\n      \"✅\",\n      \"💟\",\n      \"🆚\",\n      \"📳\",\n      \"📴\",\n      \"🆎\",\n      \"💠\",\n      \"⛎\",\n      \"🔯\",\n      \"🏧\",\n      \"💹\",\n      \"💲\",\n      \"💱\",\n      \"❌\",\n      \"❗\",\n      \"❓\",\n      \"❕\",\n      \"❔\",\n      \"⭕\",\n      \"🔝\",\n      \"🔚\",\n      \"🔙\",\n      \"🔛\",\n      \"🔜\",\n      \"🔃\",\n      \"🕛\",\n      \"🕐\",\n      \"🕑\",\n      \"🕒\",\n      \"🕓\",\n      \"🕔\",\n      \"🕕\",\n      \"🕖\",\n      \"🕗\",\n      \"🕘\",\n      \"🕙\",\n      \"🕚\",\n      \"➕\",\n      \"➖\",\n      \"➗\",\n      \"💮\",\n      \"💯\",\n      \"🔘\",\n      \"🔗\",\n      \"➰\",\n      \"🔱\",\n      \"🔺\",\n      \"🔲\",\n      \"🔳\",\n      \"🔴\",\n      \"🔵\",\n      \"🔻\",\n      \"⬜\",\n      \"⬛\",\n      \"🔶\",\n      \"🔷\",\n      \"🔸\",\n      \"🔹\"\n    ]\n  }\n];\n","import React, { Component } from \"react\";\nimport EmojiConvertor from \"emoji-js\";\nimport \"./EmojiPicker.css\";\nimport emojiData from \"../emojiData\";\n\nclass EmojiPicker extends Component {\n  constructor() {\n    super();\n    this.emojiConvertor = new EmojiConvertor();\n    this.emojiConvertor.init_env();\n  }\n\n  componentDidMount() {\n    const elem = this.domNode;\n    elem.style.opacity = 0;\n    window.requestAnimationFrame(() => {\n      elem.style.transition = \"opacity 350ms\";\n      elem.style.opacity = 1;\n    });\n    this.domNode.focus();\n  }\n\n  render() {\n    const { handleEmojiClick } = this.props;\n\n    return (\n      <div\n        tabIndex=\"0\"\n        onBlur={this.props.onBlur}\n        className=\"sc-emoji-picker\"\n        ref={e => {\n          this.domNode = e;\n        }}\n      >\n        <div className=\"sc-emoji-picker--content\">\n          {emojiData.map(category => {\n            return (\n              <div className=\"sc-emoji-picker--category\" key={category.name}>\n                <div className=\"sc-emoji-picker--category-title\">\n                  {category.name}\n                </div>\n                {category.emojis.map(emoji => {\n                  return (\n                    <span\n                      key={emoji}\n                      className=\"sc-emoji-picker--emoji\"\n                      onClick={() => {\n                        handleEmojiClick(emoji);\n                        this.domNode.blur();\n                      }}\n                    >\n                      {emoji}\n                    </span>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmojiPicker;\n","import React, { Component } from \"react\";\nimport Icon from \"../components/Icon\";\nimport \"./EmojiIcon.css\";\nimport { toggleEmojiPicker } from \"../actions\";\nimport EmojiPicker from \"../components/EmojiPicker\";\nimport { connect } from \"react-redux\";\n\nclass EmojiIcon extends Component {\n  componentDidUpdate(prevProps) {\n    const { cursorPosition, emojiOpen, inputField } = this.props;\n    if (prevProps.emojiOpen === true && emojiOpen === false) {\n      inputField.current.setSelectionRange(cursorPosition, cursorPosition);\n      inputField.current.focus();\n    }\n  }\n\n  _handlePickerBlur() {\n    this.props.toggleEmojiPicker(false);\n  }\n\n  _openPicker(e) {\n    e.preventDefault();\n    this.props.toggleEmojiPicker(!this.props.emojiOpen);\n  }\n\n  render() {\n    return (\n      <div className=\"emoji-button-wrapper\">\n        {this.props.emojiOpen && (\n          <EmojiPicker\n            onBlur={this._handlePickerBlur.bind(this)}\n            handleEmojiClick={this.props.handleEmojiClick}\n            inputValue={this.props.inputValue}\n            inputField={this.props.inputField}\n          />\n        )}\n        <button\n          onClick={this._openPicker.bind(this)}\n          className=\"emoji-button\"\n          type=\"button\"\n        >\n          <Icon icon=\"smile\" title=\"add emoji\" height=\"25px\" width=\"25px\" />\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { emojiOpen } = state;\n  return {\n    emojiOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleEmojiPicker: boolean => {\n      dispatch(toggleEmojiPicker(boolean));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmojiIcon);\n","import React, { Component } from \"react\";\nimport {\n  setInputValue,\n  setCursorPosition,\n  setEmoji,\n  sendMessage,\n  activateSendButton\n} from \"../actions\";\nimport \"./MessageInput.css\";\nimport EmojiIcon from \"./EmojiIcon\";\nimport Icon from \"../components/Icon\";\nimport { connect } from \"react-redux\";\n\nclass MessageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCursorChange = this.handleCursorChange.bind(this);\n    this.handleEmojiClick = this.handleEmojiClick.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.inputField = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.isSendButtonActive();\n  }\n\n  isSendButtonActive() {\n    const {\n      inputField,\n      props: { inputValue, sendButtonActive, activateSendButton }\n    } = this;\n    if (\n      inputValue.typingValue.length > 0 &&\n      inputField.current === document.activeElement &&\n      sendButtonActive === false\n    ) {\n      activateSendButton(true);\n    } else if (\n      inputField.current !== document.activeElement &&\n      sendButtonActive === true\n    ) {\n      activateSendButton(false);\n    }\n  }\n\n  handleSubmit(e) {\n    const { typingValue, activeUserId, sendMessage } = this.props;\n    e.preventDefault();\n    sendMessage(typingValue, activeUserId);\n  }\n\n  handleChange(e) {\n    const { setInputValue } = this.props;\n    const cursor = e.target.selectionStart;\n    const typing = e.target.value;\n    setInputValue(typing, cursor);\n  }\n\n  handleEmojiClick(emoji) {\n    const { typingValue, cursorPosition, setEmoji } = this.props;\n    const emojiString =\n      typingValue.substring(0, cursorPosition) +\n      emoji +\n      typingValue.substring(cursorPosition);\n    const newCursorPosition = cursorPosition + 2;\n    setEmoji(emojiString, newCursorPosition);\n  }\n\n  handleCursorChange(e) {\n    const { typingValue, cursorPosition, setCursorPosition } = this.props;\n    switch (e.type) {\n      case \"keyup\":\n        if (e.key.includes(\"Arrow\")) {\n          setCursorPosition(e.target.selectionStart);\n        }\n        break;\n      case \"click\":\n        const clickedPosition = e.target.selectionStart;\n        if (typingValue.length > 0 && cursorPosition !== clickedPosition) {\n          setCursorPosition(clickedPosition);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleBlur() {\n    this.props.activateSendButton(false);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      handleChange,\n      handleEmojiClick,\n      handleCursorChange,\n      handleBlur,\n      props: { typingValue, inputValue, cursorPosition, sendButtonActive }\n    } = this;\n\n    return (\n      <form\n        className={\"Message\" + (sendButtonActive ? \" active\" : \"\")}\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        onBlur={handleBlur}\n      >\n        <input\n          className=\"Message__input\"\n          onChange={handleChange}\n          onClick={handleCursorChange}\n          onKeyUp={handleCursorChange}\n          value={typingValue}\n          placeholder=\"Type your message...\"\n          ref={this.inputField}\n        />\n        <EmojiIcon\n          handleEmojiClick={handleEmojiClick}\n          inputField={this.inputField}\n          inputValue={inputValue}\n          cursorPosition={cursorPosition}\n        />\n        <button className=\"send-button\">\n          <Icon icon=\"send\" width=\"25px\" height=\"25px\" title=\"send\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { inputValue, activeUserId, emojiOpen } = state;\n  const { typingValue, cursorPosition, sendButtonActive } = inputValue;\n  return {\n    inputValue,\n    activeUserId,\n    typingValue,\n    cursorPosition,\n    sendButtonActive,\n    emojiOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInputValue: (typingValue, cursorPosition) => {\n      dispatch(setInputValue(typingValue, cursorPosition));\n    },\n    setCursorPosition: cursorPosition => {\n      dispatch(setCursorPosition(cursorPosition));\n    },\n    sendMessage: (typing, activeUserId) => {\n      dispatch(sendMessage(typing, activeUserId));\n    },\n    setEmoji: (emojiString, newCursorPosition) => {\n      dispatch(setEmoji(emojiString, newCursorPosition));\n    },\n    activateSendButton: value => {\n      dispatch(activateSendButton(value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MessageInput);\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport Chats from \"../components/Chats\";\nimport MessageInput from \"./MessageInput\";\nimport \"./ChatWindow.css\";\nimport { connect } from \"react-redux\";\nimport { deleteMessage } from \"../actions\";\n\nconst ChatWindow = ({\n  activeUserId,\n  contacts,\n  messages,\n  inputValue,\n  user,\n  deleteMessage\n}) => {\n  const activeUser = contacts[activeUserId];\n  const activeMsgs = messages[activeUserId];\n  const handleDeleteMsg = message => {\n    deleteMessage(message, activeUserId);\n  };\n\n  return (\n    <div className=\"ChatWindow\">\n      <Header activeUser={activeUser} />\n      <Chats\n        messages={Object.values(activeMsgs)}\n        activeUser={activeUser}\n        user={user}\n        handleDeleteMsg={handleDeleteMsg}\n      />\n      <MessageInput inputValue={inputValue} />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { contacts, messages, inputValue, user } = state;\n  return {\n    contacts,\n    messages,\n    inputValue,\n    user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteMessage: (message, userId) => {\n      dispatch(deleteMessage(message, userId));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatWindow);\n","import React from \"react\";\nimport \"./Main.css\";\nimport Empty from \"../components/Empty\";\nimport ChatWindow from \"../containers/ChatWindow\";\n\nconst Main = ({ user, activeUserId, sidebarOpen, toggleSidebar }) => {\n  const mobileSidebar = window.innerWidth < 750 && sidebarOpen ? true : false;\n\n  const handleClick = () => {\n    if (mobileSidebar) toggleSidebar();\n  };\n\n  const renderMainContent = () => {\n    if (!activeUserId) {\n      return <Empty user={user} activeUserId={activeUserId} />;\n    } else {\n      return <ChatWindow activeUserId={activeUserId} />;\n    }\n  };\n\n  return (\n    <main\n      className={\"Main\" + (mobileSidebar ? \" disabled\" : \"\")}\n      onClick={handleClick}\n    >\n      {renderMainContent()}\n    </main>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./Navbar.css\";\nimport Icon from \"./Icon\";\n\nconst Navbar = ({ user }) => {\n  const { profile_pic, name } = user;\n  const removePrefix = name.replace(/\\b(dr|mr|mrs|ms|miss)[.\\s]\\s?/gi, \"\");\n  const firstName = removePrefix.split(\" \")[0];\n\n  return (\n    <div className=\"Navbar\">\n      <Icon icon=\"chatbox\" width=\"140px\" height=\"26px\" />\n      <div className=\"user-pic\">\n        <span className=\"user-name\">{firstName}</span>\n        <img src={profile_pic} alt={name} className=\"profile-pic\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport Main from \"../components/Main\";\nimport Navbar from \"../components/Navbar\";\nimport \"./App.css\";\nimport { toggleSidebar } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nconst App = ({\n  user,\n  contacts,\n  activeUserId,\n  filterUsers,\n  sidebarOpen,\n  toggleSidebar\n}) => {\n  return (\n    <div className=\"App\">\n      <Navbar user={user} />\n      <Sidebar\n        contacts={Object.values(contacts)}\n        filterUsers={filterUsers}\n        sidebarOpen={sidebarOpen}\n      />\n      <Main\n        user={user}\n        activeUserId={activeUserId}\n        sidebarOpen={sidebarOpen}\n        toggleSidebar={toggleSidebar}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { user, contacts, activeUserId, filterUsers, sidebarOpen } = state;\n  return {\n    user,\n    contacts,\n    activeUserId,\n    filterUsers,\n    sidebarOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleSidebar: value => {\n      dispatch(toggleSidebar(value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport \"./fonts/fonts.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/icons.f3279efc.svg\";"],"sourceRoot":""}